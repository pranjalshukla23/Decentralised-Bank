{"ast":null,"code":"import _classCallCheck from \"C:\\\\Data\\\\Udemy Dapp - ethereum and solidity\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Data\\\\Udemy Dapp - ethereum and solidity\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Data\\\\Udemy Dapp - ethereum and solidity\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Data\\\\Udemy Dapp - ethereum and solidity\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Data\\\\Udemy Dapp - ethereum and solidity\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Data\\\\Udemy Dapp - ethereum and solidity\\\\defi-staking-app-starter\\\\defi-staking-app-starter\\\\src\\\\components\\\\Airdrop.js\";\nimport React, { Component } from \"react\";\n\nvar Airdrop = /*#__PURE__*/function (_Component) {\n  _inherits(Airdrop, _Component);\n\n  //Airdrop to have a timer that counts down\n  //initialise the countdown after the customer has stake a certain amount ... 50\n  //timer functionality, countdown, startTimer, state - for time to work\n  function Airdrop() {\n    var _this;\n\n    _classCallCheck(this, Airdrop);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Airdrop).call(this));\n    _this.state = {\n      time: {},\n      seconds: 20\n    };\n    _this.timer = 0; // this.startTime = this.startTime.bind(this);\n    //this.countDown = this.countDown.bind(this);\n\n    return _this;\n  }\n\n  _createClass(Airdrop, [{\n    key: \"secondsToTime\",\n    value: function secondsToTime(secs) {\n      var hours, minutes, seconds; //20,000 seconds  = how many hours ???\n\n      hours = Math.floor(secs / (60 * 60));\n      var divisorForMinutes = secs % (60 * 60);\n      minutes = Math.floor(divisorForMinutes / 60);\n      var divisorForSeconds = divisorForMinutes % 60;\n      seconds = Math.ceil(divisorForSeconds);\n      var obj = {\n        'h': hours,\n        'm': minutes,\n        's': seconds\n      };\n      return obj;\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var timeLeft = this.secondsToTime(this.state.seconds);\n      this.setState({\n        time: timeLeft\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          color: 'black'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }\n      }, this.state.time.m, \":\", this.state.time.s);\n    }\n  }]);\n\n  return Airdrop;\n}(Component);\n\nexport default Airdrop;","map":{"version":3,"sources":["C:/Data/Udemy Dapp - ethereum and solidity/defi-staking-app-starter/defi-staking-app-starter/src/components/Airdrop.js"],"names":["React","Component","Airdrop","state","time","seconds","timer","secs","hours","minutes","Math","floor","divisorForMinutes","divisorForSeconds","ceil","obj","timeLeft","secondsToTime","setState","color","m","s"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;;IAEMC,O;;;AAEF;AACA;AACA;AAEA,qBAAc;AAAA;;AAAA;;AACV;AAEA,UAAKC,KAAL,GAAW;AAEPC,MAAAA,IAAI,EAAC,EAFE;AAGPC,MAAAA,OAAO,EAAE;AAHF,KAAX;AAMA,UAAKC,KAAL,GAAa,CAAb,CATU,CAWX;AACC;;AAZU;AAab;;;;kCAEaC,I,EAAK;AAEf,UAAIC,KAAJ,EAAUC,OAAV,EAAkBJ,OAAlB,CAFe,CAIf;;AACAG,MAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWJ,IAAI,IAAI,KAAK,EAAT,CAAf,CAAR;AAEA,UAAIK,iBAAiB,GAAGL,IAAI,IAAI,KAAK,EAAT,CAA5B;AAEAE,MAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWC,iBAAiB,GAAG,EAA/B,CAAV;AAEA,UAAIC,iBAAiB,GAAGD,iBAAiB,GAAG,EAA5C;AAEAP,MAAAA,OAAO,GAAGK,IAAI,CAACI,IAAL,CAAUD,iBAAV,CAAV;AAEA,UAAIE,GAAG,GAAC;AAEJ,aAAIP,KAFA;AAGJ,aAAIC,OAHA;AAIJ,aAAIJ;AAJA,OAAR;AAOA,aAAOU,GAAP;AACH;;;wCAEmB;AAEhB,UAAIC,QAAQ,GAAG,KAAKC,aAAL,CAAmB,KAAKd,KAAL,CAAWE,OAA9B,CAAf;AAEA,WAAKa,QAAL,CAAc;AAACd,QAAAA,IAAI,EAACY;AAAN,OAAd;AAEH;;;6BAEO;AAEJ,0BACI;AAAK,QAAA,KAAK,EAAE;AAACG,UAAAA,KAAK,EAAC;AAAP,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKhB,KAAL,CAAWC,IAAX,CAAgBgB,CADrB,OACyB,KAAKjB,KAAL,CAAWC,IAAX,CAAgBiB,CADzC,CADJ;AAKH;;;;EA7DiBpB,S;;AAgEtB,eAAeC,OAAf","sourcesContent":["import React,{Component} from \"react\";\r\n\r\nclass Airdrop extends Component{\r\n\r\n    //Airdrop to have a timer that counts down\r\n    //initialise the countdown after the customer has stake a certain amount ... 50\r\n    //timer functionality, countdown, startTimer, state - for time to work\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        this.state={\r\n\r\n            time:{},\r\n            seconds: 20\r\n        }\r\n\r\n        this.timer = 0;\r\n\r\n       // this.startTime = this.startTime.bind(this);\r\n        //this.countDown = this.countDown.bind(this);\r\n    }\r\n\r\n    secondsToTime(secs){\r\n\r\n        let hours,minutes,seconds;\r\n\r\n        //20,000 seconds  = how many hours ???\r\n        hours = Math.floor(secs / (60 * 60));\r\n\r\n        let divisorForMinutes = secs % (60 * 60);\r\n\r\n        minutes = Math.floor(divisorForMinutes / 60);\r\n\r\n        let divisorForSeconds = divisorForMinutes % 60;\r\n\r\n        seconds = Math.ceil(divisorForSeconds);\r\n\r\n        let obj={\r\n\r\n            'h':hours,\r\n            'm':minutes,\r\n            's':seconds\r\n        }\r\n\r\n        return obj;\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        let timeLeft = this.secondsToTime(this.state.seconds);\r\n\r\n        this.setState({time:timeLeft});\r\n\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div style={{color:'black'}}>\r\n                {this.state.time.m}:{this.state.time.s}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Airdrop;"]},"metadata":{},"sourceType":"module"}